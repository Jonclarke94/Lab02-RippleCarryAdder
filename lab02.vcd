$date
	Thu Feb 16 00:20:05 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ripple_carry_adder_tb $end
$var wire 1 ! carryin $end
$var wire 8 " result [7:0] $end
$var wire 1 # carryout $end
$var parameter 32 $ NUMBITS $end
$var reg 8 % A [7:0] $end
$var reg 8 & B [7:0] $end
$var reg 1 ' clk $end
$var reg 8 ( expected_result [7:0] $end
$var reg 1 ) reset $end
$var integer 32 * failedTests [31:0] $end
$var integer 32 + totalTests [31:0] $end
$scope module rpa $end
$var wire 8 , A [7:0] $end
$var wire 8 - B [7:0] $end
$var wire 1 ! carryin $end
$var wire 8 . result_temp [7:0] $end
$var wire 9 / carry_temp [8:0] $end
$var parameter 32 0 NUMBITS $end
$var reg 1 # carryout $end
$var reg 8 1 result [7:0] $end
$scope begin genblk1[0] $end
$var parameter 2 2 i $end
$scope module FA1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 c_in $end
$var wire 3 6 level1 [2:0] $end
$var wire 1 7 c_out_w $end
$var reg 1 8 c_out $end
$var reg 1 9 s $end
$scope module and1 $end
$var wire 2 : a [1:0] $end
$var wire 1 ; result $end
$var parameter 32 < NUMINPUTS $end
$upscope $end
$scope module and2 $end
$var wire 2 = a [1:0] $end
$var wire 1 > result $end
$var parameter 32 ? NUMINPUTS $end
$upscope $end
$scope module and3 $end
$var wire 2 @ a [1:0] $end
$var wire 1 A result $end
$var parameter 32 B NUMINPUTS $end
$upscope $end
$scope module or1 $end
$var wire 3 C a [2:0] $end
$var wire 1 7 result $end
$var parameter 32 D NUMINPUTS $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 E i $end
$scope module FA1 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H c_in $end
$var wire 3 I level1 [2:0] $end
$var wire 1 J c_out_w $end
$var reg 1 K c_out $end
$var reg 1 L s $end
$scope module and1 $end
$var wire 2 M a [1:0] $end
$var wire 1 N result $end
$var parameter 32 O NUMINPUTS $end
$upscope $end
$scope module and2 $end
$var wire 2 P a [1:0] $end
$var wire 1 Q result $end
$var parameter 32 R NUMINPUTS $end
$upscope $end
$scope module and3 $end
$var wire 2 S a [1:0] $end
$var wire 1 T result $end
$var parameter 32 U NUMINPUTS $end
$upscope $end
$scope module or1 $end
$var wire 3 V a [2:0] $end
$var wire 1 J result $end
$var parameter 32 W NUMINPUTS $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 X i $end
$scope module FA1 $end
$var wire 1 Y a $end
$var wire 1 Z b $end
$var wire 1 [ c_in $end
$var wire 3 \ level1 [2:0] $end
$var wire 1 ] c_out_w $end
$var reg 1 ^ c_out $end
$var reg 1 _ s $end
$scope module and1 $end
$var wire 2 ` a [1:0] $end
$var wire 1 a result $end
$var parameter 32 b NUMINPUTS $end
$upscope $end
$scope module and2 $end
$var wire 2 c a [1:0] $end
$var wire 1 d result $end
$var parameter 32 e NUMINPUTS $end
$upscope $end
$scope module and3 $end
$var wire 2 f a [1:0] $end
$var wire 1 g result $end
$var parameter 32 h NUMINPUTS $end
$upscope $end
$scope module or1 $end
$var wire 3 i a [2:0] $end
$var wire 1 ] result $end
$var parameter 32 j NUMINPUTS $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 k i $end
$scope module FA1 $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 n c_in $end
$var wire 3 o level1 [2:0] $end
$var wire 1 p c_out_w $end
$var reg 1 q c_out $end
$var reg 1 r s $end
$scope module and1 $end
$var wire 2 s a [1:0] $end
$var wire 1 t result $end
$var parameter 32 u NUMINPUTS $end
$upscope $end
$scope module and2 $end
$var wire 2 v a [1:0] $end
$var wire 1 w result $end
$var parameter 32 x NUMINPUTS $end
$upscope $end
$scope module and3 $end
$var wire 2 y a [1:0] $end
$var wire 1 z result $end
$var parameter 32 { NUMINPUTS $end
$upscope $end
$scope module or1 $end
$var wire 3 | a [2:0] $end
$var wire 1 p result $end
$var parameter 32 } NUMINPUTS $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 ~ i $end
$scope module FA1 $end
$var wire 1 !" a $end
$var wire 1 "" b $end
$var wire 1 #" c_in $end
$var wire 3 $" level1 [2:0] $end
$var wire 1 %" c_out_w $end
$var reg 1 &" c_out $end
$var reg 1 '" s $end
$scope module and1 $end
$var wire 2 (" a [1:0] $end
$var wire 1 )" result $end
$var parameter 32 *" NUMINPUTS $end
$upscope $end
$scope module and2 $end
$var wire 2 +" a [1:0] $end
$var wire 1 ," result $end
$var parameter 32 -" NUMINPUTS $end
$upscope $end
$scope module and3 $end
$var wire 2 ." a [1:0] $end
$var wire 1 /" result $end
$var parameter 32 0" NUMINPUTS $end
$upscope $end
$scope module or1 $end
$var wire 3 1" a [2:0] $end
$var wire 1 %" result $end
$var parameter 32 2" NUMINPUTS $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 3" i $end
$scope module FA1 $end
$var wire 1 4" a $end
$var wire 1 5" b $end
$var wire 1 6" c_in $end
$var wire 3 7" level1 [2:0] $end
$var wire 1 8" c_out_w $end
$var reg 1 9" c_out $end
$var reg 1 :" s $end
$scope module and1 $end
$var wire 2 ;" a [1:0] $end
$var wire 1 <" result $end
$var parameter 32 =" NUMINPUTS $end
$upscope $end
$scope module and2 $end
$var wire 2 >" a [1:0] $end
$var wire 1 ?" result $end
$var parameter 32 @" NUMINPUTS $end
$upscope $end
$scope module and3 $end
$var wire 2 A" a [1:0] $end
$var wire 1 B" result $end
$var parameter 32 C" NUMINPUTS $end
$upscope $end
$scope module or1 $end
$var wire 3 D" a [2:0] $end
$var wire 1 8" result $end
$var parameter 32 E" NUMINPUTS $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 F" i $end
$scope module FA1 $end
$var wire 1 G" a $end
$var wire 1 H" b $end
$var wire 1 I" c_in $end
$var wire 3 J" level1 [2:0] $end
$var wire 1 K" c_out_w $end
$var reg 1 L" c_out $end
$var reg 1 M" s $end
$scope module and1 $end
$var wire 2 N" a [1:0] $end
$var wire 1 O" result $end
$var parameter 32 P" NUMINPUTS $end
$upscope $end
$scope module and2 $end
$var wire 2 Q" a [1:0] $end
$var wire 1 R" result $end
$var parameter 32 S" NUMINPUTS $end
$upscope $end
$scope module and3 $end
$var wire 2 T" a [1:0] $end
$var wire 1 U" result $end
$var parameter 32 V" NUMINPUTS $end
$upscope $end
$scope module or1 $end
$var wire 3 W" a [2:0] $end
$var wire 1 K" result $end
$var parameter 32 X" NUMINPUTS $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 Y" i $end
$scope module FA1 $end
$var wire 1 Z" a $end
$var wire 1 [" b $end
$var wire 1 \" c_in $end
$var wire 3 ]" level1 [2:0] $end
$var wire 1 ^" c_out_w $end
$var reg 1 _" c_out $end
$var reg 1 `" s $end
$scope module and1 $end
$var wire 2 a" a [1:0] $end
$var wire 1 b" result $end
$var parameter 32 c" NUMINPUTS $end
$upscope $end
$scope module and2 $end
$var wire 2 d" a [1:0] $end
$var wire 1 e" result $end
$var parameter 32 f" NUMINPUTS $end
$upscope $end
$scope module and3 $end
$var wire 2 g" a [1:0] $end
$var wire 1 h" result $end
$var parameter 32 i" NUMINPUTS $end
$upscope $end
$scope module or1 $end
$var wire 3 j" a [2:0] $end
$var wire 1 ^" result $end
$var parameter 32 k" NUMINPUTS $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 k"
b10 i"
b10 f"
b10 c"
b111 Y"
b11 X"
b10 V"
b10 S"
b10 P"
b110 F"
b11 E"
b10 C"
b10 @"
b10 ="
b101 3"
b11 2"
b10 0"
b10 -"
b10 *"
b100 ~
b11 }
b10 {
b10 x
b10 u
b11 k
b11 j
b10 h
b10 e
b10 b
b10 X
b11 W
b10 U
b10 R
b10 O
b1 E
b11 D
b10 B
b10 ?
b10 <
b0 2
b1000 0
b1000 $
$end
#0
$dumpvars
bx j"
xh"
bx g"
xe"
bx d"
xb"
bx a"
x`"
x_"
x^"
bx ]"
x\"
x["
xZ"
bx W"
xU"
bx T"
xR"
bx Q"
xO"
bx N"
xM"
xL"
xK"
bx J"
xI"
xH"
xG"
bx D"
xB"
bx A"
x?"
bx >"
x<"
bx ;"
x:"
x9"
x8"
bx 7"
x6"
x5"
x4"
bx 1"
x/"
bx ."
x,"
bx +"
x)"
bx ("
x'"
x&"
x%"
bx $"
x#"
x""
x!"
bx |
xz
bx y
xw
bx v
xt
bx s
xr
xq
xp
bx o
xn
xm
xl
bx i
xg
bx f
xd
bx c
xa
bx `
x_
x^
x]
bx \
x[
xZ
xY
bx V
xT
bx S
xQ
bx P
xN
bx M
xL
xK
xJ
bx I
xH
xG
xF
bx C
xA
bx0 @
x>
bx0 =
x;
bx :
x9
x8
x7
bx 6
05
x4
x3
bx 1
bx0 /
bx .
bx -
bx ,
b0 +
b0 *
1)
bx (
0'
bx &
bx %
x#
bx "
z!
$end
#3000
0>
b0x 6
b0x C
0A
#50000
1'
#100000
0)
0'
#150000
1'
#160000
bx0 "
bx0 1
bx0 .
09
b0 @
04
b0x S
0G
b0x f
0Z
b0x y
0m
b0x ."
0""
b0x A"
05"
b0x T"
0H"
b0x g"
0["
b0 :
b0 =
03
b0 M
b0x P
0F
b0 `
b0x c
0Y
b0 s
b0x v
0l
b0 ("
b0x +"
0!"
b0 ;"
b0x >"
04"
b0 N"
b0x Q"
0G"
b0 a"
b0x d"
0Z"
b0 (
b0 &
b0 -
b0 %
b0 ,
b1 +
#163000
0T
0g
0z
0/"
0B"
0U"
0h"
b0 6
b0 C
0;
0N
b0 I
b0 V
0Q
0a
b0 \
b0 i
0d
0t
b0 o
b0 |
0w
0)"
b0 $"
b0 1"
0,"
0<"
b0 7"
b0 D"
0?"
0O"
b0 J"
b0 W"
0R"
0b"
b0 ]"
b0 j"
0e"
#165000
b0 "
b0 1
0_
0r
0'"
0:"
0M"
0`"
b0 .
0L
0#
b0 c
b0 f
0[
b0 v
b0 y
0n
b0 +"
b0 ."
0#"
b0 >"
b0 A"
06"
b0 Q"
b0 T"
0I"
b0 d"
b0 g"
0\"
b0 P
b0 S
0H
0K
0^
0q
0&"
09"
0L"
0_"
b0 /
08
0J
0]
0p
0%"
08"
0K"
0^"
07
#200000
0'
#250000
1'
#270000
b1111110 "
b1111110 1
1L
1_
1r
1'"
1:"
b1111110 .
1M"
b10 @
14
b11 :
b10 =
13
b10 M
b10 P
1F
b10 `
b10 c
1Y
b10 s
b10 v
1l
b10 ("
b10 +"
1!"
b10 ;"
b10 >"
14"
b10 N"
b10 Q"
1G"
b10000000 (
b1 &
b1 -
b1111111 %
b1111111 ,
b10 +
#273000
b1 6
b1 C
1;
#275000
b1111100 "
b1111100 1
b1111100 .
0L
b11 P
b1 S
1H
b10 /
18
17
#278000
b10 I
b10 V
1Q
#280000
b1111000 "
b1111000 1
b1111000 .
0_
b11 c
b1 f
1[
b110 /
1K
1J
#283000
b10 \
b10 i
1d
#285000
b1110000 "
b1110000 1
b1110000 .
0r
b11 v
b1 y
1n
b1110 /
1^
1]
#288000
b10 o
b10 |
1w
#290000
b1100000 "
b1100000 1
b1100000 .
0'"
b11 +"
b1 ."
1#"
b11110 /
1q
1p
#293000
b10 $"
b10 1"
1,"
#295000
b1000000 "
b1000000 1
b1000000 .
0:"
b11 >"
b1 A"
16"
b111110 /
1&"
1%"
#298000
b10 7"
b10 D"
1?"
#300000
b0 "
b0 1
b0 .
0M"
b11 Q"
b1 T"
1I"
b1111110 /
19"
18"
0'
#303000
b10 J"
b10 W"
1R"
#305000
b10000000 "
b10000000 1
b10000000 .
1`"
b1 d"
b1 g"
1\"
b11111110 /
1L"
1K"
#350000
1'
#380000
b0 "
b0 1
b0 .
0`"
b10 a"
b11 d"
1Z"
b0 (
b11111111 %
b11111111 ,
b11 +
#383000
b10 ]"
b10 j"
1e"
#385000
1#
b111111110 /
1_"
1^"
#400000
0'
#450000
1'
#490000
b10101011 "
b10101011 1
19
1L
1r
1:"
b10101011 .
1`"
b10 :
b0 @
04
b11 M
b11 S
1G
b11 f
1Z
b11 s
b11 y
1m
b11 ;"
b11 A"
15"
b1 `
b1 c
0Y
b0 a"
b1 d"
0Z"
b10101001 (
b101110 &
b101110 -
b1111011 %
b1111011 ,
b100 +
#493000
b0 6
b0 C
0;
1N
b111 I
b111 V
1T
1g
1t
b111 o
b111 |
1z
1<"
b111 7"
b111 D"
1B"
b100 \
b100 i
0d
b0 ]"
b0 j"
0e"
#495000
b10101001 "
b10101001 1
b10101001 .
0L
0#
b10 P
b10 S
0H
08
b11111100 /
0_"
07
0^"
#498000
0Q
b1 I
b1 V
0T
#500000
0'
#550000
1'
#600000
b10101 "
b10101 1
1_
0r
1'"
0:"
b10101 .
0`"
b0 `
b1 f
0Z
b10 s
b1 y
0m
b11 ("
b11 ."
1""
b10 ;"
b1 A"
05"
b1 a"
b11 g"
1["
b1101 (
b10010010 &
b10010010 -
b101 +
0'
#603000
b0 \
b0 i
0g
0t
b10 o
b10 |
0z
1)"
b111 $"
b111 1"
1/"
0<"
b10 7"
b10 D"
0B"
b100 ]"
b100 j"
1h"
#605000
b11101 "
b11101 1
b11101 .
1r
1#
b10 v
b0 y
0n
0^
b111110100 /
1_"
0]
1^"
#608000
b0 o
b0 |
0w
#610000
b1101 "
b1101 1
b1101 .
0'"
b10 +"
b10 ."
0#"
b111100100 /
0q
0p
#613000
0,"
b1 $"
b1 1"
0/"
#650000
1'
#700000
0'
#710000
